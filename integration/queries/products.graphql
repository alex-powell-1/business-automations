mutation CreateProductWithNewMedia(
  $input: ProductInput!
  $media: [CreateMediaInput!]
) {
  productCreate(input: $input, media: $media) {
    product {
      id
      title
      productType
      vendor
      descriptionHtml
      options(first: 10) {
        id
        name
        position
        values
        optionValues {
          id
        }
      }
      variants(first: 10) {
        nodes {
          id
          title
          price
          sku
          inventoryQuantity
        }
      }
      media(first: 10) {
        nodes {
          id
          alt
          mediaContentType
          preview {
            status
          }
        }
      }
    }
    userErrors {
      field
      message
    }
  }
}

mutation productVariantCreate($input: ProductVariantInput!) {
  productVariantCreate(input: $input) {
    product {
      id
      title
    }
    productVariant {
      createdAt
      displayName
      id
      inventoryItem {
        unitCost {
          amount
        }
        tracked
      }
      inventoryPolicy
      inventoryQuantity
      price
      product {
        id
      }
      title
    }
    userErrors {
      field
      message
    }
  }
}

mutation productVariantsBulkCreate(
  $productId: ID!
  $variants: [ProductVariantsBulkInput!]!
) {
  productVariantsBulkCreate(productId: $productId, variants: $variants) {
    productVariants {
      id
    }
    userErrors {
      field
      message
    }
  }
}

mutation productUpdate($input: ProductInput!) {
  productUpdate(input: $input) {
    product {
      id
    }
    userErrors {
      field
      message
    }
  }
}

mutation productVariantsBulkUpdate(
  $productId: ID!
  $variants: [ProductVariantsBulkInput!]!
) {
  productVariantsBulkUpdate(productId: $productId, variants: $variants) {
    product {
      id
    }
    productVariants {
      id
      metafields(first: 2) {
        edges {
          node {
            namespace
            key
            value
          }
        }
      }
    }
    userErrors {
      field
      message
    }
  }
}

mutation productVariantDelete($id: ID!) {
  productVariantDelete(id: $id) {
    deletedProductVariantId
    product {
      id
      title
    }
    userErrors {
      field
      message
    }
  }
}

query product($id: ID!) {
  product(id: $id) {
    collections(first: 5) {
      edges {
        node {
          handle
        }
      }
    }
    createdAt
    defaultCursor
    description
    descriptionHtml
    featuredImage {
      id
    }
    feedback {
      details {
        messages {
          message
        }
      }
    }
    giftCardTemplateSuffix
    handle
    hasOnlyDefaultVariant
    hasOutOfStockVariants
    id
    images(first: 5) {
      edges {
        node {
          id
        }
      }
    }
    inCollection(id: "gid://shopify/Collection/1007901140")
    isGiftCard
    legacyResourceId
    metafield(key: "app_key", namespace: "affiliates") {
      description
    }
    metafields(first: 5) {
      edges {
        node {
          description
        }
      }
    }
    onlineStorePreviewUrl
    onlineStoreUrl
    options {
      name
    }
    priceRange {
      maxVariantPrice {
        amount
      }
      minVariantPrice {
        amount
      }
    }
    productType
    resourcePublicationsCount {
      count
    }
    availablePublicationsCount {
      count
    }
    publishedAt
    resourcePublications(first: 5) {
      edges {
        node {
          isPublished
        }
      }
    }
    resourcePublicationOnCurrentPublication {
      publication {
        name
        id
      }
      publishDate
      isPublished
    }
    seo {
      title
    }
    storefrontId
    tags
    templateSuffix
    title
    totalInventory
    tracksInventory
    unpublishedPublications(first: 5) {
      edges {
        node {
          name
        }
      }
    }
    updatedAt
    variants(first: 5) {
      edges {
        node {
          displayName
        }
      }
    }
    variantsCount {
      count
    }
    vendor
  }
}